{"ast":null,"code":"var _jsxFileName = \"/Users/ritulsoni/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useState, useRef, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const inputRef = useRef(null);\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  useEffect(() => {\n    const handleScroll = () => {\n      if (inputRef.current) {\n        const {\n          top,\n          left\n        } = inputRef.current.getBoundingClientRect();\n        setDropdownPosition(prevState => ({ ...prevState,\n          top: top + window.scrollY + 63,\n          left\n        }));\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            var _inputRef$current;\n\n            const {\n              top,\n              left\n            } = ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.getBoundingClientRect()) || {\n              top: 0,\n              left: 0\n            };\n            setDropdownPosition({\n              top: top + window.scrollY + 63,\n              left\n            });\n            toggleProps.onClick(event);\n          },\n          ref: inputRef,\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  function renderItems() {\n    if (!isOpen) {\n      return null;\n    }\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--dropdown-item\",\n        children: [loadingLabel, \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this);\n    }\n\n    if (items.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--dropdown-item\",\n        children: \"No items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 12\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"200px\",\n        overflowY: \"auto\"\n      },\n      children: items.map((item, index) => {\n        var _parsedSelectedItem;\n\n        const parsedItem = parseItem(item);\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n            key: parsedItem.value,\n            index,\n            item,\n            className: classNames(\"RampInputSelect--dropdown-item\", {\n              \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n              \"RampInputSelect--dropdown-item-selected\": ((_parsedSelectedItem = parsedSelectedItem) === null || _parsedSelectedItem === void 0 ? void 0 : _parsedSelectedItem.value) === parsedItem.value\n            })\n          }),\n          children: parsedItem.label\n        }, parsedItem.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(InputSelect, \"wo6PFKfwNrdzNTGUpPsKVtWO5kk=\");\n\n_c = InputSelect;\n\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","useRef","useEffect","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","inputRef","selectedItem","handleScroll","current","getBoundingClientRect","prevState","window","scrollY","addEventListener","removeEventListener","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","event","onClick","renderItems","length","maxHeight","overflowY","map","index","parsedItem","key","value","className","getDropdownPosition","target","Element"],"sources":["/Users/ritulsoni/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\nimport { useCallback, useState, useRef, useEffect } from \"react\"\nimport classNames from \"classnames\"\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\"\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  })\n\n  const inputRef = useRef<HTMLDivElement>(null)\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return\n      }\n\n      consumerOnChange(selectedItem)\n      setSelectedValue(selectedItem)\n    },\n    [consumerOnChange]\n  )\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (inputRef.current) {\n        const { top, left } = inputRef.current.getBoundingClientRect()\n        setDropdownPosition((prevState) => ({ ...prevState, top: top + window.scrollY + 63, left }))\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll)\n\n    return () => window.removeEventListener(\"scroll\", handleScroll)\n  }, [])\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps()\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem)\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={(event) => {\n                const { top, left } = inputRef.current?.getBoundingClientRect() || { top: 0, left: 0 }\n                setDropdownPosition({ top: top + window.scrollY + 63, left })\n                toggleProps.onClick(event)\n              }}\n              ref={inputRef}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        )\n      }}\n    </Downshift>\n  )\n\nfunction renderItems() {\n  if (!isOpen) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"RampInputSelect--dropdown-item\">\n        {loadingLabel}...\n      </div>\n    );\n  }\n\n  if (items.length === 0) {\n    return <div className=\"RampInputSelect--dropdown-item\">No items</div>;\n  }\n\n  return (\n    <div style={{ maxHeight: \"200px\", overflowY: \"auto\" }}>\n      {items.map((item, index) => {\n        const parsedItem = parseItem(item);\n        return (\n          <div\n            key={parsedItem.value}\n            {...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\":\n                  highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\":\n                  parsedSelectedItem?.value === parsedItem.value,\n              }),\n            })}\n          >\n            {parsedItem.label}\n          </div>\n        );\n      })}\n    </div>\n  );\n}}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect();\n    const { scrollY } = window;\n    return {\n      top: scrollY + top + 63,\n      left,\n    };\n  }\n\n  return { top: 0, left: 0 };\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}